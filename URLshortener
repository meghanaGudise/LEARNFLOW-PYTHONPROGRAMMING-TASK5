import requests

class URLShortener:
    def __init__(self):
        self.api_url = 'http://tinyurl.com/api-create.php'
        self.url_mapping = {}

    def shorten_url(self, long_url):
        try:
            response = requests.get(f"{self.api_url}?url={long_url}")
            if response.status_code == 200:
                short_url = response.text.strip()
                self.url_mapping[short_url] = long_url  # Store the mapping
                return short_url
            else:
                print(f"Failed to shorten URL. Status code: {response.status_code}")
                return None
        except requests.RequestException as e:
            print(f"An error occurred: {e}")
            return None

    def expand_url(self, short_url):
        return self.url_mapping.get(short_url, "No mapping found for this URL.")

if __name__ == "__main__":
    shortener = URLShortener()

    while True:
        choice = input("Enter '1' to shorten a URL, '2' to expand a URL, or 'q' to quit: ").strip()
        if choice == '1':
            long_url = input("Enter a long URL to shorten: ")
            short_url = shortener.shorten_url(long_url)
            if short_url:
                print(f"Shortened URL: {short_url}")
        elif choice == '2':
            short_url = input("Enter a short URL to expand: ")
            long_url = shortener.expand_url(short_url)
            print(f"Original URL: {long_url}")
        elif choice == 'q':
            break
        else:
            print("Invalid choice. Please try again.")

